resources:
  Resources:
    # Role for the createUser function
    PostFunctionRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: postFunctionRole-dev  # Hardcode the stage temporarily for testing
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service: lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: postFunctionPolicy-dev
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource: arn:aws:logs:${self:provider.region}:637423524797:log-group:/aws/lambda/${self:service}-${self:provider.stage}-createUser:*
                - Effect: Allow
                  Action:
                    - dynamodb:PutItem
                  Resource: !GetAtt UsersTable.Arn

    # Role for the getUser and getUsers functions
    GetFunctionRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: getFunctionRole-dev  # Hardcode the stage temporarily for testing
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service: lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: getFunctionPolicy-dev
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource: arn:aws:logs:${self:provider.region}:637423524797:log-group:/aws/lambda/${self:service}-${self:provider.stage}-getUsers:*
                - Effect: Allow
                  Action:
                    - dynamodb:GetItem
                    - dynamodb:Scan
                  Resource: !GetAtt UsersTable.Arn

    # Authorizer role for API Gateway
    AuthorizerRole:
      Type: "AWS::IAM::Role"
      Properties:
        RoleName: authorizerRole-dev  # Hardcode the stage temporarily for testing
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service: lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: authorizerPolicy-dev
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource: arn:aws:logs:${self:provider.region}:637423524797:log-group:/aws/lambda/${self:service}-${self:provider.stage}-authorizerLambda:*
                - Effect: Allow
                  Action:
                    - execute-api:Invoke
                  Resource:
                    - arn:aws:lambda:${self:provider.region}:637423524797:function:${self:service}-${self:provider.stage}-createUser
                    - arn:aws:lambda:${self:provider.region}:637423524797:function:${self:service}-${self:provider.stage}-getUsers
                - Effect: Allow
                  Action:
                    - secretsmanager:GetSecretValue
                  Resource: arn:aws:secretsmanager:${self:provider.region}:637423524797:secret:YOUR_SECRET_NAME  # Replace with actual secret name if not an env variable

    # DynamoDB Table for Users
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: UsersTable-dev  # Hardcode the table name for testing
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH